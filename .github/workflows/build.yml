name: Lingmo OS Autobuild

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: debian:12

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        apt-get update
        apt-get install -y wget dpkg curl

    - name: Install GitHub CLI
      run: |
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        apt-get update
        apt-get install -y gh

    - name: Install Lingmo build tool
      run: |
        wget https://packages.lingmo.org/lingmo/pool/main/l/lingmo-pkgbuild/lingmo-pkgbuild_0.1.0-1~lingmo1_amd64.deb
        apt install -y ./lingmo-pkgbuild_0.1.0-1~lingmo1_amd64.deb
        apt-get install -f

    - name: Create .deb packages
      run: |
        mkdir -p buildpkg/
        cp -r core/ buildpkg/
        lingmo-pkgbuild -j$(nproc) -c buildpkg/

    - name: Move files and compress directory
      run: |
        mv pkg_out release

    - name: Create release tarball
      run: |
        tar -cJf release.tar.xz -C release .

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: 3.0.0-rc9-build$(date +'%Y%m%d%H%M%S')
        release_name: Release 3.0.0-rc9
        draft: false
        prerelease: false

    - name: Upload release directory files
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release/*
        asset_name: release_files
        asset_content_type: application/octet-stream

    - name: Upload release tarball
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release.tar.xz
        asset_name: release.tar.xz
        asset_content_type: application/x-xz